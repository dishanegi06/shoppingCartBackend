function cov_76ao9hcnr(){var path="C:\\Users\\91976\\Desktop\\Shoppingcart\\server\\Products\\routes\\api.js";var hash="5d4ac078fa3887a69f79ad77d8d41f0969fa8bd6";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\91976\\Desktop\\Shoppingcart\\server\\Products\\routes\\api.js",statementMap:{"0":{start:{line:1,column:14},end:{line:1,column:32}},"1":{start:{line:3,column:13},end:{line:3,column:29}},"2":{start:{line:4,column:15},end:{line:4,column:44}},"3":{start:{line:5,column:19},end:{line:5,column:52}},"4":{start:{line:10,column:0},end:{line:24,column:3}},"5":{start:{line:12,column:3},end:{line:12,column:40}},"6":{start:{line:13,column:3},end:{line:23,column:6}},"7":{start:{line:16,column:7},end:{line:22,column:8}},"8":{start:{line:18,column:11},end:{line:18,column:41}},"9":{start:{line:20,column:11},end:{line:20,column:39}},"10":{start:{line:21,column:11},end:{line:21,column:36}},"11":{start:{line:34,column:0},end:{line:48,column:3}},"12":{start:{line:36,column:3},end:{line:36,column:39}},"13":{start:{line:37,column:3},end:{line:47,column:6}},"14":{start:{line:40,column:7},end:{line:46,column:8}},"15":{start:{line:42,column:11},end:{line:42,column:41}},"16":{start:{line:44,column:11},end:{line:44,column:37}},"17":{start:{line:45,column:11},end:{line:45,column:34}},"18":{start:{line:50,column:0},end:{line:56,column:3}},"19":{start:{line:52,column:3},end:{line:55,column:6}},"20":{start:{line:54,column:7},end:{line:54,column:30}},"21":{start:{line:59,column:0},end:{line:65,column:2}},"22":{start:{line:61,column:4},end:{line:64,column:7}},"23":{start:{line:63,column:8},end:{line:63,column:31}},"24":{start:{line:469,column:0},end:{line:469,column:24}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:10,column:27},end:{line:10,column:28}},loc:{start:{line:11,column:0},end:{line:24,column:1}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:14,column:9},end:{line:14,column:10}},loc:{start:{line:15,column:3},end:{line:23,column:4}},line:15},"2":{name:"(anonymous_2)",decl:{start:{line:34,column:34},end:{line:34,column:35}},loc:{start:{line:35,column:0},end:{line:48,column:1}},line:35},"3":{name:"(anonymous_3)",decl:{start:{line:38,column:9},end:{line:38,column:10}},loc:{start:{line:39,column:3},end:{line:47,column:4}},line:39},"4":{name:"(anonymous_4)",decl:{start:{line:50,column:28},end:{line:50,column:29}},loc:{start:{line:51,column:0},end:{line:56,column:1}},line:51},"5":{name:"(anonymous_5)",decl:{start:{line:52,column:38},end:{line:52,column:39}},loc:{start:{line:53,column:3},end:{line:55,column:4}},line:53},"6":{name:"(anonymous_6)",decl:{start:{line:59,column:34},end:{line:59,column:35}},loc:{start:{line:60,column:0},end:{line:65,column:1}},line:60},"7":{name:"(anonymous_7)",decl:{start:{line:61,column:55},end:{line:61,column:56}},loc:{start:{line:62,column:4},end:{line:64,column:5}},line:62}},branchMap:{"0":{loc:{start:{line:16,column:7},end:{line:22,column:8}},type:"if",locations:[{start:{line:16,column:7},end:{line:22,column:8}},{start:{line:16,column:7},end:{line:22,column:8}}],line:16},"1":{loc:{start:{line:40,column:7},end:{line:46,column:8}},type:"if",locations:[{start:{line:40,column:7},end:{line:46,column:8}},{start:{line:40,column:7},end:{line:46,column:8}}],line:40}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"5d4ac078fa3887a69f79ad77d8d41f0969fa8bd6"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_76ao9hcnr=function(){return actualCoverage;};}return actualCoverage;}cov_76ao9hcnr();const express=(cov_76ao9hcnr().s[0]++,require('express'));//const category = require('../models/category');
const router=(cov_76ao9hcnr().s[1]++,express.Router());const Category=(cov_76ao9hcnr().s[2]++,require('../models/category'));const mainCategory=(cov_76ao9hcnr().s[3]++,require('../models/mainCategory'));//get mainCategories
cov_76ao9hcnr().s[4]++;router.get('/mainCategory',function(req,res){cov_76ao9hcnr().f[0]++;cov_76ao9hcnr().s[5]++;console.log("Getting all the items");cov_76ao9hcnr().s[6]++;mainCategory.find({}).exec(function(err,maincategories){cov_76ao9hcnr().f[1]++;cov_76ao9hcnr().s[7]++;if(err){cov_76ao9hcnr().b[0][0]++;cov_76ao9hcnr().s[8]++;res.send('error has occured');}else{cov_76ao9hcnr().b[0][1]++;cov_76ao9hcnr().s[9]++;console.log(maincategories);cov_76ao9hcnr().s[10]++;res.json(maincategories);}});});//get with respect title
cov_76ao9hcnr().s[11]++;router.get('/mainCategory/:title',function(req,res){cov_76ao9hcnr().f[2]++;cov_76ao9hcnr().s[12]++;console.log("Getting one Category");cov_76ao9hcnr().s[13]++;mainCategory.findOne({}).exec(function(err,maincategory){cov_76ao9hcnr().f[3]++;cov_76ao9hcnr().s[14]++;if(err){cov_76ao9hcnr().b[1][0]++;cov_76ao9hcnr().s[15]++;res.send('error has occured');}else{cov_76ao9hcnr().b[1][1]++;cov_76ao9hcnr().s[16]++;console.log(maincategory);cov_76ao9hcnr().s[17]++;res.send(maincategory);}});});//post the main categories
cov_76ao9hcnr().s[18]++;router.post('/mainCategory',function(req,res){cov_76ao9hcnr().f[4]++;cov_76ao9hcnr().s[19]++;mainCategory.create(req.body).then(function(maincategory){cov_76ao9hcnr().f[5]++;cov_76ao9hcnr().s[20]++;res.send(maincategory);});});//delete specific created objects
cov_76ao9hcnr().s[21]++;router.delete('/mainCategory/:id',function(req,res){cov_76ao9hcnr().f[6]++;cov_76ao9hcnr().s[22]++;mainCategory.findByIdAndRemove(req.params.id).then(function(maincategory){cov_76ao9hcnr().f[7]++;cov_76ao9hcnr().s[23]++;res.send(maincategory);});});//edit
/*router.patch('/mainCategory/:id' ,(req,res)=>
{
mainCategory.findOneAndUpdate({'_id':req.params.id},{ $set:req.body })
.then((maincategory)=>{
    if(maincategory)
    {
        res.json(maincategory);
    
     }
    else{
        res.json("Invalid Id!");
    }
     }).catch((err)=>{
         if(err)
         {
             throw err;
         }
     });

});


//categories

//get a list of categories from the db
router.get('/categories',function(req,res)
{
   console.log("Getting all the items");
   Category.find({})
   .exec(function(err,categories)
   {
       if(err)
       {
           res.send('error has occured');
       }else{
           console.log(categories);
           res.json(categories);
       }
   })
});
//get specific category
router.get('/categories/:title',function(req,res)
{
   console.log("Getting one Category");
   Category.findOne({})
   .exec(function(err,category)
   {
       if(err)
       {
           res.send('error has occured');
       }else{
           console.log(category);
           res.send(category);
       }
   });
});

//create new objects
router.post('/categories',function(req,res)
{
   Category.create(req.body).then(function(categories)
   {
       res.send(categories);
   });
});

//delete specific created objects
router.delete('/categories/:id',function(req,res)
{
    Category.findByIdAndRemove(req.params.id).then(function(category)
    {
        res.send(category);
    });
})

router.patch('/categories/:id' ,(req,res)=>
{
Category.findOneAndUpdate({'_id':req.params.id},{ $set:req.body })
.then((category)=>{
    if(category)
    {
        res.json(category);
    
    }
    else{
        res.json("Invalid Id!");
    }
     }).catch((err)=>{
         if(err)
         {
             throw err;
         }
     });

});


router.delete('/categories/:id',function(req,res)
{
    Category.findByIdAndRemove(req.params.id).then(function(category)
    {
        res.send(category);
    });
})











//Products
const Product=require('../models/product');

//get a list of categories from the db
router.get('/product',function(req,res)
{
   console.log("Getting all the items");
   Product.find({})
   .exec(function(err,product)
   {
       if(err)
       {
           res.send('error has occured');
       }else{
           console.log(product);
           res.json(product);
       }
   })
});

//get a specific product by it's title
router.get('/product/:category',function(req,res)
{
   console.log("Getting one product");
   Product.findOne({})
   .exec(function(err,product)
   {
       if(err)
       {
           res.send('error has occured');
       }else{
           console.log(product);
           res.json(product);
       }
   });
});
//get specific products  by specific id
router.get("/product/:id",(req,res)=>
{
 Product.findById(req.params.id).then((product)=>{
if(product)
{
    
    res.json(product);

}
else{
    res.json("Invalid Id!");
}
 }).catch((err)=>{
     if(err)
     {
         throw err;
     }
 });
});

//update sepecific items
router.put('/product/:title',function(req,res)
{
   console.log("updating specific items");
   Product.findOneAndUpdate({title:req.params.title},req.body).then(function()
   {
    Product.findOne({title:req.params.title}).then(function(product)
    {
        console.log(req.body);
        res.json(product);
    });
   });
});

//create new objects
router.post('/product',function(req,res)
{
   Product.create(req.body).then(function(product)
   {
       res.json(product);
   });
});

//update
router.patch('/product/:id' ,(req,res)=>
{
Product.findOneAndUpdate({'_id':req.params.id},{ $set:req.body })
.then((product)=>{
    if(product)
    {
        res.json(product);
    
    }
    else{
        res.json("Invalid Id!");
    }
     }).catch((err)=>{
         if(err)
         {
             throw err;
         }
     });

});
//delete specific id
router.delete('/product/:id',function(req,res)
{
    Product.findByIdAndRemove(req.params.id)
    .then((product)=>{
        if(product)
        {
            res.json(product);
        
        }
        else{
            res.json("Invalid Id!");
        }
         }).catch((err)=>{
             if(err)
             {
                 throw err;
             }
         });
});

//post items in a cart
const Cart=require('../models/cart');

router.post('/Cart/:userId/:productId/:title/:price',(req,res)=>
{
new Cart({'userId':req.params.userId,'productId':req.params.productId,'title':req.params.title,'price':req.params.price,'quantity':req.body.quantity})
.save()
.then((cart)=> res.send(cart))
.catch((error)=> console.log(error));
});

router.post('/Cart',function(req,res)
{
   Cart.create(req.body).then(function(product)
   {
       res.json(product);
   });
});








router.get('/Cart',function(req,res)
{
   console.log("Getting all the items in a cart");
   Cart.find({})
   .exec(function(err,cart)
   {
       if(err)
       {
           res.send('error has occured');
       }else{
           console.log(cart);
           res.json(cart);
       }
   })
});

router.get("/Cart/:id",(req,res)=>
{
 Cart.findById(req.params.id).then((product)=>{
if(product)
{
    res.json(product);

}
else{
    res.json("Invalid Id!");
}
 }).catch((err)=>{
     if(err)
     {
         throw err;
     }
 });
});


router.get('/Cart/:userId/products',(req,res)=>
{
    Cart.find({userId:req.params.userId})
    .then((products)=> res.send(products))
    .catch((error)=>console.log(error));
});

//delete cart items
router.delete('/Cart/:id',function(req,res)
{
    Cart.findByIdAndRemove(req.params.id)
    .then((cart)=>{
        if(cart)
        {
            res.json(cart);
        
        }
        else{
            res.json("Invalid Id!");
        }
         }).catch((err)=>{
             if(err)
             {
                 throw err;
             }
         });
});  










router.put('/Cart/:id',function(req,res)
{
   console.log("updating specific items");
   Cart.findByIdAndUpdate({_id:req.params.id},req.body).then(function(product)
   {
        console.log(req.body);
        res.send(product);
    });
   });







   //Sale Products

  


  
















//maincategorywise categories
router.get('/mainCategory/:title/categories',(req,res)=>
{
Category.find({mainCategory:req.params.title})
.then((categories)=> res.send(categories))
.catch((error)=>console.log(error));
});
//categorywise products

router.get('/categories/:title/product',(req,res)=>
{
Product.find({category:req.params.title})
.then((products)=> res.send(products))
.catch((error)=>console.log(error));
});

/**router.get('/categories/:title/sale',(req,res)=>
{
Sale.find({category:req.params.title})
.then((products)=> res.send(products))
.catch((error)=>console.log(error));
});
**/cov_76ao9hcnr().s[24]++;module.exports=router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,